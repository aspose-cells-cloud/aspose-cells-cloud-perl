=begin comment

Web API Swagger specification

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

=end comment

=cut

#
# NOTE: This class is auto generated by Swagger Codegen
# Please update the test cases below to test the API endpoints.
# Ref: https://github.com/swagger-api/swagger-codegen
#
use Test::More tests => 1; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;
require './t/CellsTestBase.pl';

use AsposeCellsCloud::Configuration;
use AsposeCellsCloud::ApiClient;
use AsposeCellsCloud::CellsApi;
use AsposeCellsCloud::Object::ColumnsResponse;
use AsposeCellsCloud::Object::CalculationOptions;
use AsposeCellsCloud::Object::FontSetting;
use AsposeCellsCloud::Object::Style;

my $BOOK1 = 'Book1.xlsx';
my $MYDOC = 'myDocument.xlsx';
my $PVTESTFILE = 'TestCase.xlsx';
my $TEMPFOLDER = 'PerlTest';
my $SHEET1 = 'Sheet1';
my $SHEET2 = 'Sheet2';
my $SHEET3 = 'Sheet3';
my $SHEET4 = 'Sheet4';
my $SHEET5 = 'Sheet5';
my $SHEET6 = 'Sheet6';
my $SHEET7 = 'Sheet7';
my $SHEET8 = 'Sheet8';
my $CELLNAME = 'A1';
my $RANGE = 'A1:C10';
my $CELLAREA = 'A1:C10';


my $api = get_client();

#
# cells_delete_worksheet_columns test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $column_index = 10; # replace NULL with a proper value
    my $columns = 1; # replace NULL with a proper value
    my $update_reference = 'true'; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    ready_file('api'=> $api, 'file'=>$BOOK1 ,'folder' =>$TEMPFOLDER) ;   
    my $result = $api->cells_delete_worksheet_columns(name => $name, sheet_name => $sheet_name, column_index => $column_index, columns => $columns, update_reference => $update_reference, folder => $folder);
    ok($result->status eq 'OK' ,'cells_delete_worksheet_columns OK');
}

#
# cells_delete_worksheet_row test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $row_index = 1000; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    ready_file('api'=> $api, 'file'=>$BOOK1 ,'folder' =>$TEMPFOLDER) ;   
    my $result = $api->cells_delete_worksheet_row(name => $name, sheet_name => $sheet_name, row_index => $row_index, folder => $folder);
    ok($result->status eq 'OK' ,'cells_delete_worksheet_row OK');
}

#
# cells_delete_worksheet_rows test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $startrow = 1000; # replace NULL with a proper value
    my $total_rows = 1; # replace NULL with a proper value
    my $update_reference = 'true'; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    ready_file('api'=> $api, 'file'=>$BOOK1 ,'folder' =>$TEMPFOLDER) ;   
    my $result = $api->cells_delete_worksheet_rows(name => $name, sheet_name => $sheet_name, startrow => $startrow, total_rows => $total_rows, update_reference => $update_reference, folder => $folder);
    ok($result->status eq 'OK' ,'cells_delete_worksheet_rows OK');
}

#
# cells_get_worksheet_cell test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $cell_or_method_name = 'firstcell'; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    ready_file('api'=> $api, 'file'=>$BOOK1 ,'folder' =>$TEMPFOLDER) ;   
    my $result = $api->cells_get_worksheet_cell(name => $name, sheet_name => $sheet_name, cell_or_method_name => $cell_or_method_name, folder => $folder);
    # ok($result->Status eq 'OK' ,'cells_get_worksheet_cell OK');
    #isa_ok($result, 'AsposeCellsCloud::Object::CellResponse');
    printf $result;
    printf "\n";
}

#
# cells_get_worksheet_cell_style test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $cell_name = $CELLNAME; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    ready_file('api'=> $api, 'file'=>$BOOK1 ,'folder' =>$TEMPFOLDER) ;   
    my $result = $api->cells_get_worksheet_cell_style(name => $name, sheet_name => $sheet_name, cell_name => $cell_name, folder => $folder);
    ok($result->status eq 'OK' ,'cells_get_worksheet_cell_style OK');
}

#
# cells_get_worksheet_cells test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $offest = 1; # replace NULL with a proper value
    my $count = 2 ; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    ready_file('api'=> $api, 'file'=>$BOOK1 ,'folder' =>$TEMPFOLDER) ;   
    my $result = $api->cells_get_worksheet_cells(name => $name, sheet_name => $sheet_name, offest => $offest, count => $count, folder => $folder);
     ok($result->status eq 'OK' ,'cells_get_worksheet_cells OK');
}

#
# cells_get_worksheet_column test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $column_index = 1; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    ready_file('api'=> $api, 'file'=>$BOOK1 ,'folder' =>$TEMPFOLDER) ;   
    my $result = $api->cells_get_worksheet_column(name => $name, sheet_name => $sheet_name, column_index => $column_index, folder => $folder);
     ok($result->status eq 'OK' ,'cells_get_worksheet_column OK');
}

#
# cells_get_worksheet_columns test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_get_worksheet_columns(name => $name, sheet_name => $sheet_name, folder => $folder);
     ok($result->status eq 'OK' ,'cells_get_worksheet_columns OK');
}

#
# cells_get_worksheet_row test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $row_index = 1 ; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_get_worksheet_row(name => $name, sheet_name => $sheet_name, row_index => $row_index, folder => $folder);
    ok($result->status eq 'OK' ,'cells_get_worksheet_row OK');
}

#
# cells_get_worksheet_rows test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_get_worksheet_rows(name => $name, sheet_name => $sheet_name, folder => $folder);
    ok($result->status eq 'OK' ,'cells_get_worksheet_rows OK');
}

#
# cells_post_cell_calculate test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $cell_name = $CELLNAME; # replace NULL with a proper value
    my $options = AsposeCellsCloud::Object::CalculationOptions->new(); # replace NULL with a proper value
    # $options->recursive = 0;
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_cell_calculate(name => $name, sheet_name => $sheet_name, cell_name => $cell_name, options => $options, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_cell_calculate OK');
}

#
# cells_post_cell_characters test
#
# {
#     my $name = $BOOK1; # replace NULL with a proper value
#     my $sheet_name = $SHEET1; # replace NULL with a proper value
#     my $cell_name = $CELLNAME; # replace NULL with a proper value
#     my $opt1 =  AsposeCellsCloud::Object::FontSetting->new();
#     my @options = ($opt1); # replace NULL with a proper value
#     my $folder = $TEMPFOLDER; # replace NULL with a proper value
#     my $result = $api->cells_post_cell_characters(name => $name, sheet_name => $sheet_name, cell_name => $cell_name, options => @options, folder => $folder);
#     ok($result->status eq 'OK' ,'cells_post_cell_characters OK');
# }

#
# cells_post_clear_contents test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $range = undef ; # replace NULL with a proper value
    my $start_row = 1000; # replace NULL with a proper value
    my $start_column = 1; # replace NULL with a proper value
    my $end_row = 1003; # replace NULL with a proper value
    my $end_column = 3; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_clear_contents(name => $name, sheet_name => $sheet_name, range => $range, start_row => $start_row, start_column => $start_column, end_row => $end_row, end_column => $end_column, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_clear_contents OK');
}

#
# cells_post_clear_formats test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $range = undef; # replace NULL with a proper value
    my $start_row = 1000; # replace NULL with a proper value
    my $start_column = 1; # replace NULL with a proper value
    my $end_row = 1003; # replace NULL with a proper value
    my $end_column = 3; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_clear_formats(name => $name, sheet_name => $sheet_name, range => $range, start_row => $start_row, start_column => $start_column, end_row => $end_row, end_column => $end_column, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_clear_formats OK');
}

#
# cells_post_column_style test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $column_index = 28; # replace NULL with a proper value
    my $style = AsposeCellsCloud::Object::Style->new(custom => '##,#'); # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_column_style(name => $name, sheet_name => $sheet_name, column_index => $column_index, style => $style, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_column_style OK');
}

#
# cells_post_copy_cell_into_cell test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $dest_cell_name = 'C1'; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $worksheet = $SHEET2; # replace NULL with a proper value
    my $cellname = #CELLNAME; # replace NULL with a proper value
    my $row = 1; # replace NULL with a proper value
    my $column = 1; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_copy_cell_into_cell(name => $name, dest_cell_name => $dest_cell_name, sheet_name => $sheet_name, worksheet => $worksheet, cellname => $cellname, row => $row, column => $column, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_copy_cell_into_cell OK');
}

#
# cells_post_copy_worksheet_columns test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $source_column_index = 28; # replace NULL with a proper value
    my $destination_column_index = 30; # replace NULL with a proper value
    my $column_number = 2; # replace NULL with a proper value
    my $worksheet = $SHEET2; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_copy_worksheet_columns(name => $name, sheet_name => $sheet_name, source_column_index => $source_column_index, destination_column_index => $destination_column_index, column_number => $column_number, worksheet => $worksheet, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_copy_worksheet_columns OK');
}

#
# cells_post_copy_worksheet_rows test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $source_row_index = 1000; # replace NULL with a proper value
    my $destination_row_index = 10002; # replace NULL with a proper value
    my $row_number = 2; # replace NULL with a proper value
    my $worksheet =  $SHEET2; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_copy_worksheet_rows(name => $name, sheet_name => $sheet_name, source_row_index => $source_row_index, destination_row_index => $destination_row_index, row_number => $row_number, worksheet => $worksheet, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_copy_worksheet_rows OK');
}

#
# cells_post_group_worksheet_columns test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $first_index = 1000; # replace NULL with a proper value
    my $last_index = 1003; # replace NULL with a proper value
    my $hide = 'true'; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_group_worksheet_columns(name => $name, sheet_name => $sheet_name, first_index => $first_index, last_index => $last_index, hide => $hide, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_group_worksheet_columns OK');
}

#
# cells_post_group_worksheet_rows test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $first_index = 1000; # replace NULL with a proper value
    my $last_index = 1003; # replace NULL with a proper value
    my $hide = 'ture'; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_group_worksheet_rows(name => $name, sheet_name => $sheet_name, first_index => $first_index, last_index => $last_index, hide => $hide, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_group_worksheet_rows OK');
}

#
# cells_post_hide_worksheet_columns test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $start_column = 1000; # replace NULL with a proper value
    my $total_columns = 7; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_hide_worksheet_columns(name => $name, sheet_name => $sheet_name, start_column => $start_column, total_columns => $total_columns, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_hide_worksheet_columns OK');
}

#
# cells_post_hide_worksheet_rows test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $startrow = 1000; # replace NULL with a proper value
    my $total_rows = 4; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_hide_worksheet_rows(name => $name, sheet_name => $sheet_name, startrow => $startrow, total_rows => $total_rows, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_hide_worksheet_rows OK');
}

#
# cells_post_row_style test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $row_index = 1000; # replace NULL with a proper value
    my $style = AsposeCellsCloud::Object::Style->new(custom => '##,#'); # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_row_style(name => $name, sheet_name => $sheet_name, row_index => $row_index, style => $style, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_row_style OK');
}

#
# cells_get_set_cell_html_string test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $cell_name = $CELLNAME; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_get_cell_html_string(name => $name, sheet_name => $sheet_name, cell_name => $cell_name, folder => $folder);
    # ok($result->status  ,'cells_get_set_cell_html_string OK');
}
#
# cells_post_set_cell_html_string test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $cell_name = $CELLNAME; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_set_cell_html_string(name => $name, sheet_name => $sheet_name, cell_name => $cell_name, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_set_cell_html_string OK');
}

#
# cells_post_set_cell_range_value test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $cellarea = 'A1000:B1003'; # replace NULL with a proper value
    my $value = 'undef'; # replace NULL with a proper value
    my $type = 'string'; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_set_cell_range_value(name => $name, sheet_name => $sheet_name, cellarea => $cellarea, value => $value, type => $type, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_set_cell_range_value OK');
}

#
# cells_post_set_worksheet_column_width test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $column_index = 1000; # replace NULL with a proper value
    my $width = 10; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_set_worksheet_column_width(name => $name, sheet_name => $sheet_name, column_index => $column_index, width => $width, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_set_worksheet_column_width OK');
}

#
# cells_post_ungroup_worksheet_columns test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $first_index = 1000; # replace NULL with a proper value
    my $last_index = 1003; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_ungroup_worksheet_columns(name => $name, sheet_name => $sheet_name, first_index => $first_index, last_index => $last_index, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_ungroup_worksheet_columns OK');
}

#
# cells_post_ungroup_worksheet_rows test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $first_index = 1000; # replace NULL with a proper value
    my $last_index = 1003; # replace NULL with a proper value
    my $is_all = 'ture'; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_ungroup_worksheet_rows(name => $name, sheet_name => $sheet_name, first_index => $first_index, last_index => $last_index, is_all => $is_all, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_ungroup_worksheet_rows OK');
}

#
# cells_post_unhide_worksheet_columns test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $startcolumn = 1000; # replace NULL with a proper value
    my $total_columns = 4; # replace NULL with a proper value
    my $width = 20; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_unhide_worksheet_columns(name => $name, sheet_name => $sheet_name, startcolumn => $startcolumn, total_columns => $total_columns, width => $width, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_unhide_worksheet_columns OK');
}

#
# cells_post_unhide_worksheet_rows test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $startrow = 1000; # replace NULL with a proper value
    my $total_rows = 4; # replace NULL with a proper value
    my $height = 20; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_unhide_worksheet_rows(name => $name, sheet_name => $sheet_name, startrow => $startrow, total_rows => $total_rows, height => $height, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_unhide_worksheet_rows OK');
}

#
# cells_post_update_worksheet_cell_style test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $cell_name = $CELLNAME; # replace NULL with a proper value
    my $style = AsposeCellsCloud::Object::Style->new(custom => '##,#'); # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_update_worksheet_cell_style(name => $name, sheet_name => $sheet_name, cell_name => $cell_name, style => $style, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_update_worksheet_cell_style OK');
}

#
# cells_post_update_worksheet_range_style test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $range = 'A1000:B1003'; # replace NULL with a proper value
    my $style = AsposeCellsCloud::Object::Style->new(custom => '##,#'); # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_update_worksheet_range_style(name => $name, sheet_name => $sheet_name, range => $range, style => $style, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_update_worksheet_range_style OK');
}

#
# cells_post_update_worksheet_row test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $row_index = 1000; # replace NULL with a proper value
    my $height = 40; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_update_worksheet_row(name => $name, sheet_name => $sheet_name, row_index => $row_index, height => $height, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_update_worksheet_row OK');
}

#
# cells_post_worksheet_cell_set_value test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $cell_name = $CELLNAME; # replace NULL with a proper value
    my $value = 'undef'; # replace NULL with a proper value
    my $type = 'string'; # replace NULL with a proper value
    my $formula = undef; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_worksheet_cell_set_value(name => $name, sheet_name => $sheet_name, cell_name => $cell_name, value => $value, type => $type, formula => $formula, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_worksheet_cell_set_value OK');
}

#
# cells_post_worksheet_merge test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $start_row = 1000; # replace NULL with a proper value
    my $start_column = 1; # replace NULL with a proper value
    my $total_rows = 3; # replace NULL with a proper value
    my $total_columns = 4; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_worksheet_merge(name => $name, sheet_name => $sheet_name, start_row => $start_row, start_column => $start_column, total_rows => $total_rows, total_columns => $total_columns, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_worksheet_merge OK');
}

#
# cells_post_worksheet_unmerge test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $start_row = 1000; # replace NULL with a proper value
    my $start_column = 1; # replace NULL with a proper value
    my $total_rows = 4; # replace NULL with a proper value
    my $total_columns = 4; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_post_worksheet_unmerge(name => $name, sheet_name => $sheet_name, start_row => $start_row, start_column => $start_column, total_rows => $total_rows, total_columns => $total_columns, folder => $folder);
    ok($result->status eq 'OK' ,'cells_post_worksheet_unmerge OK');
}

#
# cells_put_insert_worksheet_columns test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $column_index = 30; # replace NULL with a proper value
    my $columns = 1; # replace NULL with a proper value
    my $update_reference = 'true'; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_put_insert_worksheet_columns(name => $name, sheet_name => $sheet_name, column_index => $column_index, columns => $columns, update_reference => $update_reference, folder => $folder);
    ok($result->status eq 'OK' ,'cells_put_insert_worksheet_columns OK');
}

#
# cells_put_insert_worksheet_row test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $row_index = 1000; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_put_insert_worksheet_row(name => $name, sheet_name => $sheet_name, row_index => $row_index, folder => $folder);
    ok($result->status eq 'OK' ,'cells_put_insert_worksheet_row OK');
}

#
# cells_put_insert_worksheet_rows test
#
{
    my $name = $BOOK1; # replace NULL with a proper value
    my $sheet_name = $SHEET1; # replace NULL with a proper value
    my $startrow = 1000; # replace NULL with a proper value
    my $total_rows = 4; # replace NULL with a proper value
    my $update_reference = 'true'; # replace NULL with a proper value
    my $folder = $TEMPFOLDER; # replace NULL with a proper value
    my $result = $api->cells_put_insert_worksheet_rows(name => $name, sheet_name => $sheet_name, startrow => $startrow, total_rows => $total_rows, update_reference => $update_reference, folder => $folder);
    ok($result->status eq 'OK' ,'cells_put_insert_worksheet_rows OK');
}


1;
